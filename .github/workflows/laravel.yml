name: Laravel Docker CI/CD with Tests and Deployment

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Instalar PHP 8.2.0
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Copiar archivo .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Instalar dependencias de Composer
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Generar clave de Laravel
        run: php artisan key:generate

      - name: Configurar permisos de almacenamiento
        run: chmod -R 777 storage bootstrap/cache

      - name: Crear base de datos SQLite
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Ejecutar pruebas de Laravel y generar reporte
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: php artisan test > test-report.txt


      - name: Almacenar reporte de pruebas
        if: always()  
        uses: actions/upload-artifact@v2
        with:
          name: test-report
          path: test-report.txt

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/estudio:latest

      - name: Trigger Render Deploy
        if: success()  # Solo si todos los pasos anteriores pasan
        run: |
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}
